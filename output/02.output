python 02_parameter_tuning.py
Fitting 3 folds for each of 8 candidates, totalling 24 fits
[Parallel(n_jobs=-1)]: Using backend LokyBackend with 4 concurrent workers.
[CV] n_estimators=100, loss=ls .......................................
[CV] n_estimators=100, loss=ls .......................................
[CV] n_estimators=200, loss=ls .......................................
[CV] n_estimators=100, loss=ls .......................................
[CV] ........................ n_estimators=100, loss=ls, total=  15.3s
[CV] n_estimators=200, loss=ls .......................................
[CV] ........................ n_estimators=100, loss=ls, total=  15.8s
[CV] n_estimators=200, loss=ls .......................................
[CV] ........................ n_estimators=100, loss=ls, total=  16.4s
[CV] n_estimators=100, loss=lad ......................................
[CV] ........................ n_estimators=200, loss=ls, total=  31.2s
[CV] n_estimators=100, loss=lad ......................................
[CV] ....................... n_estimators=100, loss=lad, total=  20.2s
[CV] n_estimators=100, loss=lad ......................................
[CV] ........................ n_estimators=200, loss=ls, total=  32.7s
[CV] n_estimators=200, loss=lad ......................................
[CV] ........................ n_estimators=200, loss=ls, total=  32.0s
[CV] n_estimators=200, loss=lad ......................................
[CV] ....................... n_estimators=100, loss=lad, total=  19.9s
[CV] n_estimators=200, loss=lad ......................................
[CV] ....................... n_estimators=100, loss=lad, total=  23.3s
[CV] n_estimators=100, loss=huber ....................................
[CV] ..................... n_estimators=100, loss=huber, total=  29.6s
[CV] n_estimators=100, loss=huber ....................................
[CV] ....................... n_estimators=200, loss=lad, total=  47.9s
[CV] n_estimators=100, loss=huber ....................................
[CV] ....................... n_estimators=200, loss=lad, total=  44.9s
[CV] n_estimators=200, loss=huber ....................................
[CV] ....................... n_estimators=200, loss=lad, total=  48.9s
[CV] n_estimators=200, loss=huber ....................................
[CV] ..................... n_estimators=100, loss=huber, total=  27.7s
[CV] n_estimators=200, loss=huber ....................................
[CV] ..................... n_estimators=100, loss=huber, total=  26.1s
[CV] n_estimators=100, loss=quantile .................................
[CV] .................. n_estimators=100, loss=quantile, total=  21.6s
[CV] n_estimators=100, loss=quantile .................................
[CV] ..................... n_estimators=200, loss=huber, total=  52.0s
[CV] n_estimators=100, loss=quantile .................................
[CV] ..................... n_estimators=200, loss=huber, total=  52.2s
[CV] n_estimators=200, loss=quantile .................................
[CV] .................. n_estimators=100, loss=quantile, total=  23.3s
[CV] n_estimators=200, loss=quantile .................................
[CV] .................. n_estimators=100, loss=quantile, total=  23.2s
[CV] n_estimators=200, loss=quantile .................................
[CV] ..................... n_estimators=200, loss=huber, total=  54.2s
[CV] .................. n_estimators=200, loss=quantile, total=  35.2s
[CV] .................. n_estimators=200, loss=quantile, total=  27.0s
[CV] .................. n_estimators=200, loss=quantile, total=  24.1s
[Parallel(n_jobs=-1)]: Done  24 out of  24 | elapsed:  3.3min finished
{'n_estimators': 100, 'loss': 'ls'}